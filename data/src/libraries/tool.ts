import { LibraryItemType } from "../types";

export default [
  {
    name: "Nano ID",
    description:
      "A tiny, secure, URL-friendly, unique string ID generator for JavaScript.",
    group: "Tool",
    author: "Andrey Sitnik",
    author_github: "https://github.com/ai",
    homepage: "https://zelark.github.io/nano-id-cc",
    language: "JS",
    source: "UNREAD",
    tags: ["Tool", "JS", "Id"],
    articles: [],
    notes: [],
  },
  {
    name: "Chrono",
    description: "Timezone-aware date and time handling.",
    group: "Tool",
    author: "Chronotope",
    author_github: "https://github.com/chronotope",
    homepage: "https://github.com/chronotope/chrono",
    language: "Rust",
    source: "UNREAD",
    tags: ["Tool", "Rust", "Time"],
    articles: [],
    notes: [],
  },
  {
    name: "Poetry",
    logo: "PoetryIcon",
    description:
      "Poetry helps you declare, manage and install dependencies of Python projects, ensuring you have the right stack everywhere.",
    group: "Tool",
    author: "Poetry",
    author_github: "https://github.com/python-poetry",
    homepage: "https://python-poetry.org/",
    language: "Python",
    source: "UNREAD",
    tags: ["Tool", "Python", "Package Manager", "Dev"],
    articles: [],
    notes: [],
  },
  {
    name: "pipx",
    description:
      "Install and Run Python Applications in Isolated Environments.",
    group: "Tool",
    author: "Python Packaging Authority",
    author_github: "https://github.com/pypa",
    homepage: "https://pipx.pypa.io/stable",
    language: "Python",
    source: "UNREAD",
    tags: ["Tool", "Python", "Dev"],
    articles: [],
    notes: [],
  },
  {
    name: "thiserror",
    description:
      "This library provides a convenient derive macro for the standard library's std::error::Error trait.",
    group: "Tool",
    author: "David Tolnay",
    author_github: "https://github.com/dtolnay",
    homepage: "https://github.com/dtolnay/thiserror",
    language: "Rust",
    source: "UNREAD",
    tags: ["Tool", "Rust", "Errors"],
    articles: [],
    notes: [],
  },
  {
    name: "Anyhow",
    description:
      "This library provides anyhow::Error, a trait object based error type for easy idiomatic error handling in Rust applications.",
    author: "David Tolnay",
    author_github: "https://github.com/dtolnay",
    homepage: "https://github.com/dtolnay/anyhow",
    source: "UNREAD",
    tags: ["Tool", "Rust", "Errors"],
    articles: [],
    notes: [],
  },
  {
    name: "Zod",
    logo: "https://zod.dev/logo.svg",
    description:
      "TypeScript-first schema validation with static type inference.",
    author: "Colin McDonnell",
    author_github: "https://github.com/colinhacks",
    homepage: "https://zod.dev",
    source: "UNREAD",
    tags: ["Tool", "Frontend", "Backend", "JS", "Validation"],
  },
] as LibraryItemType[];
