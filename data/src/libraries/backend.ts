import { LibraryItemType } from "../types";

export default [
  {
    name: "Argh",
    description:
      "Argh is an opinionated Derive-based argument parser optimized for code size.",
    group: "Backend",
    author: "Google",
    author_github: "https://github.com/google",
    homepage: "https://github.com/google/argh",
    language: "Rust",
    source: "UNREAD",
    tags: ["Cli"],
    articles: [],
    notes: [],
  },
  {
    name: "num_cpus",
    description: "Count the number of CPUs on the current machine.",
    group: "Backend",
    author: "Sean McArthur",
    author_github: "https://github.com/seanmonstar",
    homepage: "https://github.com/seanmonstar/num_cpus",
    language: "Rust",
    source: "UNREAD",
    tags: ["System"],
    articles: [],
    notes: [],
  },
  {
    name: "Anyhow",
    description:
      "This library provides anyhow::Error, a trait object based error type for easy idiomatic error handling in Rust applications.",
    group: "Backend",
    author: "David Tolnay",
    author_github: "https://github.com/dtolnay",
    homepage: "https://github.com/dtolnay/anyhow",
    language: "Rust",
    source: "UNREAD",
    tags: ["Errors"],
    articles: [],
    notes: [],
  },
  {
    name: "CacheCloud",
    description: "CacheCloud is a Redis cloud management platform.",
    group: "Backend",
    author: "sohutv",
    author_github: "https://github.com/sohutv",
    homepage: "https://github.com/sohutv/cachecloud",
    language: "Java",
    source: "UNREAD",
    tags: ["Redis"],
    articles: [],
    notes: [],
  },
  {
    name: "Humane Units",
    description: "Just a few functions for helping humanize times and sizes.",
    group: "Backend",
    author: "Dustin Sallings",
    author_github: "https://github.com/dustin",
    homepage: "https://github.com/dustin/go-humanize",
    language: "Golang",
    source: "UNREAD",
    tags: ["Tool"],
    articles: [],
    notes: [],
  },
  {
    name: "stack",
    description:
      "Package stack implements utilities to capture, manipulate, and format call stacks. It provides a simpler API than package runtime.",
    group: "Backend",
    author: "go-stack",
    author_github: "https://github.com/go-stack",
    homepage: "https://github.com/go-stack/stack",
    language: "Golang",
    source: "UNREAD",
    tags: ["Tool", "Log"],
    articles: [],
    notes: [],
  },
  {
    name: "clap",
    description: "Command Line Argument Parser for Rust.",
    group: "Backend",
    author: "clap-rs",
    author_github: "https://github.com/clap-rs",
    homepage: "https://github.com/clap-rs/clap",
    language: "Rust",
    source: "UNREAD",
    tags: ["Cli"],
    articles: [],
    notes: [],
  },
  {
    name: "reqwest",
    description: "An ergonomic, batteries-included HTTP Client for Rust.",
    group: "Backend",
    author: "Sean McArthur",
    author_github: "https://github.com/seanmonstar",
    homepage: "https://github.com/seanmonstar/reqwest",
    language: "Rust",
    source: "UNREAD",
    tags: ["Http"],
    articles: [],
    notes: [],
  },
  {
    name: "Colored",
    description: "Coloring terminal so simple, you already know how to do it!",
    group: "Backend",
    author: "Colored RS",
    author_github: "https://github.com/colored-rs",
    homepage: "https://github.com/colored-rs/colored",
    language: "Rust",
    source: "UNREAD",
    tags: ["Cli"],
    articles: [],
    notes: [],
  },
  {
    name: "Jsonxf",
    description: "A JSON transformer, written in Rust.",
    group: "Backend",
    author: "pete gamache",
    author_github: "https://github.com/gamache",
    homepage: "https://github.com/gamache/jsonxf",
    language: "Rust",
    source: "UNREAD",
    tags: ["Tool", "Json"],
    articles: [],
    notes: [],
  },
  {
    name: "num",
    description:
      "A collection of numeric types and traits for Rust, including bigint, complex, rational, range iterators, generic integers, and more!",
    group: "Backend",
    author: "rust-num",
    author_github: "https://github.com/rust-num",
    homepage: "https://github.com/rust-num/num",
    language: "Rust",
    source: "UNREAD",
    tags: ["Algorithms"],
    articles: [],
    notes: [],
  },
  {
    name: "nom",
    description: "Rust parser combinator framework.",
    group: "Backend",
    author: "rust-bakery",
    author_github: "https://github.com/rust-bakery",
    homepage: "https://github.com/rust-bakery/nom",
    language: "Rust",
    source: "UNREAD",
    tags: ["Text Parser"],
    articles: [],
    notes: [],
  },
  {
    name: "Portpicker",
    description: "Picks a free port, that is unused on both TCP and UDP.",
    group: "Backend",
    author: "Hannes Karppila",
    author_github: "https://github.com/Dentosal",
    homepage: "https://github.com/Dentosal/portpicker-rs",
    language: "Rust",
    source: "UNREAD",
    tags: ["Network", "Tool"],
    articles: [],
    notes: [],
  },
  {
    name: "Redisson",
    description:
      " Easy Redis Java client with features of an in-memory data grid.",
    group: "Backend",
    author: "Redisson",
    author_github: "https://github.com/redisson",
    homepage: "https://github.com/redisson/redisson",
    language: "Java",
    source: "UNREAD",
    tags: ["Redis"],
    articles: [],
    notes: [],
  },
  {
    name: "Affinity",
    description:
      "This crate provides a consistent way to set core affinity for currently running threads and processes. Not supported on MacOS.",
    group: "Backend",
    author: "elast0ny",
    author_github: "https://github.com/elast0ny",
    homepage: "https://github.com/elast0ny/affinity",
    language: "Rust",
    source: "UNREAD",
    tags: ["Thread", "Async"],
    articles: [],
    notes: [],
  },
  {
    name: "thread-amount",
    description: "Get the amount of threads in the current process.",
    group: "Backend",
    author: "Jez",
    author_github: "https://github.com/jzeuzs",
    homepage: "https://github.com/jzeuzs/thread-amount",
    language: "Rust",
    source: "UNREAD",
    tags: ["Thread", "Async"],
    articles: [],
    notes: [],
  },
  {
    name: "thread-priority",
    description:
      "A simple library to control thread schedule policies and thread priority.",
    group: "Backend",
    author: "Shockingly Good",
    author_github: "https://github.com/iddm",
    homepage: "https://github.com/iddm/thread-priority",
    language: "Rust",
    source: "UNREAD",
    tags: ["Thread", "Async"],
    articles: [],
    notes: [],
  },
  {
    name: "Crossbeam",
    description:
      "This crate provides a set of tools for concurrent programming.",
    group: "Backend",
    author: "Crossbeam",
    author_github: "https://github.com/crossbeam-rs",
    homepage: "https://github.com/crossbeam-rs/crossbeam",
    language: "Rust",
    source: "UNREAD",
    tags: ["Thread", "Async"],
    articles: [],
    notes: [],
  },
  {
    name: "Rayon",
    description: "Rayon is a data-parallelism library for Rust.",
    group: "Backend",
    author: "rayon-rs",
    author_github: "https://github.com/rayon-rs",
    homepage: "https://github.com/rayon-rs/rayon",
    language: "Rust",
    source: "UNREAD",
    tags: ["Thread", "Async"],
    articles: [],
    notes: [],
  },
  {
    name: "SendWrapper",
    description:
      "This Rust crate implements a wrapper type called SendWrapper which allows you to move around non-Send types between threads, as long as you access the contained value only from within the original thread.",
    group: "Backend",
    author: "thk1",
    author_github: "https://github.com/thk1",
    homepage: "https://github.com/thk1/send_wrapper",
    language: "Rust",
    source: "UNREAD",
    tags: ["Thread", "Async"],
    articles: [],
    notes: [],
  },
  {
    name: "Thread-control",
    description:
      "Missing Rust execution control tools for threads and futures.",
    group: "Backend",
    author: "Denis Kolodin",
    author_github: "https://github.com/therustmonk",
    homepage: "https://github.com/therustmonk/thread-control",
    language: "Rust",
    source: "UNREAD",
    tags: ["Thread", "Async"],
    articles: [],
    notes: [],
  },
  {
    name: "Tokio",
    description:
      "A runtime for writing reliable, asynchronous, and slim applications with the Rust programming language.",
    group: "Backend",
    author: "Tokio",
    author_github: "https://github.com/tokio-rs",
    homepage: "https://tokio.rs",
    language: "Rust",
    source: "UNREAD",
    tags: ["Async"],
    articles: [],
    notes: [],
  },
  {
    name: "async-std",
    description:
      "This crate provides an async version of std. It provides all the interfaces you are used to, but in an async version and ready for Rust's async/await syntax.",
    group: "Backend",
    author: "async-rs",
    author_github: "https://github.com/async-rs",
    homepage: "https://async.rs",
    language: "Rust",
    source: "UNREAD",
    tags: ["Async"],
    articles: [],
    notes: [],
  },
  {
    name: "smol",
    description:
      "A small and fast async runtime.This crate simply re-exports other smaller async crates.",
    group: "Backend",
    author: "smol-rs",
    author_github: "https://github.com/smol-rs",
    homepage: "https://github.com/smol-rs/smol",
    language: "Rust",
    source: "UNREAD",
    tags: ["Async"],
    articles: [],
    notes: [],
  },
  {
    name: "futures-lite",
    description: "A lightweight async prelude.",
    group: "Backend",
    author: "smol-rs",
    author_github: "https://github.com/smol-rs",
    homepage: "https://github.com/smol-rs/futures-lite",
    language: "Rust",
    source: "UNREAD",
    tags: ["Async"],
    articles: [],
    notes: [],
  },
  {
    name: "Monoio",
    description: "A thread-per-core Rust runtime with io_uring/epoll/kqueue.",
    group: "Backend",
    author: "Bytedance Inc.",
    author_github: "https://github.com/bytedance",
    homepage: "https://github.com/bytedance/monoio",
    language: "Rust",
    source: "UNREAD",
    tags: ["Async"],
    articles: [],
    notes: [],
  },
  {
    name: "Actix Web",
    description:
      "Actix Web is a powerful, pragmatic, and extremely fast web framework for Rust.",
    group: "Backend",
    author: "Actix",
    author_github: "https://github.com/actix",
    homepage: "https://actix.rs",
    language: "Rust",
    source: "UNREAD",
    tags: ["Web"],
    articles: [],
    notes: [],
  },
  {
    name: "axum",
    description:
      "axum is a web application framework that focuses on ergonomics and modularity.",
    group: "Backend",
    author: "Tokio",
    author_github: "https://github.com/tokio-rs",
    homepage: "https://github.com/tokio-rs/axum",
    language: "Rust",
    source: "UNREAD",
    tags: ["Web"],
    articles: [],
    notes: [],
  },
  {
    name: "Heim",
    description: "Cross-platform library for system information fetching.",
    group: "Backend",
    author: "heim-rs",
    author_github: "https://github.com/heim-rs",
    homepage: "https://heim-rs.github.io",
    language: "Rust",
    source: "UNREAD",
    tags: ["System"],
    articles: [],
    notes: [],
  },
  {
    name: "beef",
    description: "Faster, more compact implementation of Cow.",
    group: "Backend",
    author: "Maciej Hirsz",
    author_github: "https://github.com/maciejhirsz",
    homepage: "https://github.com/maciejhirsz/beef",
    language: "Rust",
    source: "UNREAD",
    tags: ["Thread", "Async"],
    articles: [],
    notes: [],
  },
  {
    name: "once_cell",
    description:
      "once_cell provides two new cell-like types, unsync::OnceCell and sync::OnceCell.",
    group: "Backend",
    author: "Alex Kladov",
    author_github: "https://github.com/matklad",
    homepage: "https://github.com/matklad/once_cell",
    language: "Rust",
    source: "UNREAD",
    tags: ["Thread", "Async"],
    articles: [],
    notes: [],
  },
  {
    name: "DashMap",
    description:
      "DashMap is an implementation of a concurrent associative array/hashmap in Rust.",
    group: "Backend",
    author: "Joel Wejdenstål",
    author_github: "https://github.com/xacrimon",
    homepage: "https://github.com/xacrimon/dashmap",
    language: "Rust",
    source: "UNREAD",
    tags: ["Async"],
    articles: [],
    notes: [],
  },
  {
    name: "Crossbeam",
    description:
      "This crate provides a set of tools for concurrent programming.",
    group: "Backend",
    author: "Crossbeam",
    author_github: "https://github.com/crossbeam-rs",
    homepage: "https://github.com/crossbeam-rs/crossbeam",
    language: "Rust",
    source: "UNREAD",
    tags: ["Async", "Channel"],
    articles: [],
    notes: [],
  },
  {
    name: "Flume",
    description: "A blazingly fast multi-producer, multi-consumer channel.",
    group: "Backend",
    author: "Joshua Barretto",
    author_github: "https://github.com/zesterer",
    homepage: "https://github.com/zesterer/flume",
    language: "Rust",
    source: "UNREAD",
    tags: ["Async", "Channel"],
    articles: [],
    notes: [],
  },
  {
    name: "async_channel",
    description:
      "An async multi-producer multi-consumer channel, where each message can be received by only one of all existing consumers.",
    group: "Backend",
    author: "smol-rs",
    author_github: "https://github.com/smol-rs",
    homepage: "https://github.com/smol-rs/async-channel",
    language: "Rust",
    source: "UNREAD",
    tags: ["Async", "Channel"],
    articles: [],
    notes: [],
  },
  {
    name: "futures-rs",
    description:
      "futures-rs is a library providing the foundations for asynchronous programming in Rust. It includes key trait definitions like Stream, as well as utilities like join!, select!, and various futures combinator methods which enable expressive asynchronous control flow.",
    group: "Backend",
    author: "The Rust Programming Language",
    author_github: "https://github.com/rust-lang",
    homepage: "https://github.com/rust-lang/futures-rs",
    language: "Rust",
    source: "UNREAD",
    tags: ["Async", "Channel"],
    articles: [],
    notes: [],
  },
  {
    name: "Crossfire",
    description:
      "This crate provide channels used between async-async or async-blocking code, in all direction. Implmented with lockless in mind, low level is based on crossbeam-channel.",
    group: "Backend",
    author: "QingStor",
    author_github: "https://github.com/qingstor",
    homepage: "https://github.com/qingstor/crossfire-rs",
    language: "Rust",
    source: "UNREAD",
    tags: ["Async", "Channel"],
    articles: [],
    notes: [],
  },
  {
    name: "Kanal",
    description: "The fast sync and async channel that Rust deserves!",
    group: "Backend",
    author: "Khashayar Fereidani",
    author_github: "https://github.com/fereidani",
    homepage: "https://github.com/fereidani/kanal",
    language: "Rust",
    source: "UNREAD",
    tags: ["Async", "Channel"],
    articles: [],
    notes: [],
  },
] as Array<LibraryItemType>;
